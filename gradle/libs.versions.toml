[versions]

android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "35"
agp = "8.8.0"
kotlin = "2.1.0"
compose-multiplatform = "1.7.3"
androidx-activityCompose = "1.10.0"
androidx-uiTest = "1.7.7"
kotlinx-coroutines = "1.10.1"
androidx-lifecycle = "2.8.4"
androidx-navigation = "2.8.0-alpha10"
kotlinx-serialization = "1.7.3"
ktlint = "11.5.1"
koin = "4.0.1"
ktor = "3.0.3"
crypto-otp = "0.2.0"
coil = "3.0.4"
qrKit = "3.0.6"
calf = "0.7.0"
composablesCore = "1.20.0"
kstore = "0.9.1"
ksp = "2.1.10-1.0.29"
arrow = "2.0.1"
androidx-room = "2.7.0-alpha13"
androidx-sqlite = "2.5.0-SNAPSHOT"
barcodeScanning = "17.3.0"
cryptographyCore = "0.4.0"
multiplatformSettingsNoArg = "1.3.0"
truthish = "1.0.2"
turbine = "1.2.0"

[libraries]
androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-uitest-testManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidx-uiTest" }
androidx-uitest-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidx-uiTest" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
androidx-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "androidx-navigation" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }
koin-compose-viewmodel-navigation = { module = "io.insert-koin:koin-compose-viewmodel-navigation", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }
coil-test = { module = "io.coil-kt.coil3:coil-test", version.ref = "coil" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
kstore = { module = "io.github.xxfast:kstore", version.ref = "kstore" }
crypto-otp = { module = "com.diglol.crypto:otp", version.ref = "crypto-otp" }
qr-kit = { module = "network.chaintech:qr-kit", version.ref = "qrKit" }
calf-permissions = { module = "com.mohamedrejeb.calf:calf-permissions", version.ref = "calf" }
calf-file-picker = { module = "com.mohamedrejeb.calf:calf-file-picker", version.ref = "calf" }
composables-core = { module = "com.composables:core", version.ref = "composablesCore" }
arrow-optics-ksp = { module = "io.arrow-kt:arrow-optics-ksp-plugin", version.ref = "arrow" }
arrow-optics-compose = { module = "io.arrow-kt:arrow-optics-compose", version.ref = "arrow" }
androidx-sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "androidx-sqlite" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "androidx-room" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidx-room" }
barcode-scanning = { module = "com.google.mlkit:barcode-scanning", version.ref = "barcodeScanning" }
cryptography-core = { module = "dev.whyoleg.cryptography:cryptography-core", version.ref = "cryptographyCore" }
cryptography-provider-android = { module = "dev.whyoleg.cryptography:cryptography-provider-jdk", version.ref = "cryptographyCore" }
cryptography-provider-openssl3-prebuilt = { module = "dev.whyoleg.cryptography:cryptography-provider-openssl3-prebuilt", version.ref = "cryptographyCore" }
multiplatform-settings-no-arg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatformSettingsNoArg" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
truthish = { module = "com.varabyte.truthish:truthish", version.ref = "truthish" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

# Build-logic Gradle Plugins
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
compose-gradle-plugin = { module = "org.jetbrains.compose:org.jetbrains.compose.gradle.plugin", version.ref = "compose-multiplatform" }
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
ksp-gradle-plugin = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
ktlint-gradle-plugin = { module = "org.jlleitschuh.gradle:ktlint-gradle", version.ref = "ktlint" }
androidx-room-gradle-plugin = { module = "androidx.room:room-gradle-plugin", version.ref = "androidx-room" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
room = { id = "androidx.room", version.ref = "androidx-room" }

# Gradle Plugins Convention
auth-kotlinMultiplatform = { id = "auth.kotlinMultiplaform" }
auth-composeMultiplatform = { id = "auth.composeMultiplatform" }
auth-kmp-library = { id = "auth.kmp.library" }
auth-cmp-library = { id = "auth.cmp.library" }
auth-cmp-application = { id = "auth.cmp.application" }
auth-ktlint = { id = "auth.ktlint" }
auth-kmp-room = { id = "auth.kmp.room" }
auth-arrow = { id = "auth.arrow" }
auth-kotlin-serialization = { id = "auth.kotlin.serialization" }
auth-ktor = { id = "auth.ktor" }
auth-coil = { id = "auth.coil" }
auth-koin = { id = "auth.koin" }